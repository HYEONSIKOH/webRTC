name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (코드 체크아웃)
        uses: actions/checkout@v2

      - name: Set up JDK 17 (JDK 17 설정)
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Create application.properties from git secret (application.yml 파일 생성)
        run: |
          mkdir -p ./src/main/resources
          echo "$APPLICATION" > ./src/main/resources/application.yml
        env:
          APPLICATION: ${{ secrets.APPLICATION }}

      - name: Grant execute permission to Gradle (Gradle 실행 권한 부여)
        run: |
          chmod +x ./gradlew

#      - name: Detect Changes (변경된 파일 감지)
#        id: changed-files
#        run: |
#          git fetch origin develop --depth=1
#          CHANGED_FILES=$(git diff --name-only origin/develop HEAD)
#
#          echo "Changed files: $CHANGED_FILES"
#
#          if echo "$CHANGED_FILES" | grep -q '^default/'; then
#            echo "DEFAULT_CHANGED=true" >> $GITHUB_ENV
#          fi
#
#          if echo "$CHANGED_FILES" | grep -q '^chat/'; then
#            echo "CHAT_CHANGED=true" >> $GITHUB_ENV
#          fi

      - name: Build JAR (JAR 빌드)
        run: |
          ./gradlew bootJar

      # CR_PAT: Container Registry - Personal Access Token
      - name: GitHub Container Registry login (GitHub Container Registry 로그인)
        run: |
          export CR_PAT=${{ secrets.TOKEN }}
          echo $CR_PAT | docker login ghcr.io -u ${{ secrets.GIT_ID }} --password-stdin

      - name: Docker build & push
        run: |
          echo "Current directory: $(pwd)"
          TAG=$(git rev-parse --short HEAD)
          DOCKER_IMAGE=ghcr.io/${{ secrets.GIT_ID }}/rtc_server:$TAG
          DOCKER_IMAGE_LATEST=ghcr.io/${{ secrets.GIT_ID }}/rtc_server:latest
          docker build -t rtc_server -f ./docker/default.Dockerfile .
          docker tag rtc_server $DOCKER_IMAGE
          docker tag rtc_server $DOCKER_IMAGE_LATEST
          docker push $DOCKER_IMAGE
          docker push $DOCKER_IMAGE_LATEST
          
#      - name: Deploy to Linux Server (리눅스 서버 배포)
#        uses: appleboy/ssh-action@v0.1.1
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.PORT }}
#          script: |
#            cd /home/ubuntu/docker
#            sudo docker-compose stop spring
#            sudo docker-compose pull spring
#            sudo docker-compose up -d spring
#            sudo docker-compose stop spring_chat
#            sudo docker-compose pull spring_chat
#            sudo docker-compose up -d spring_chat
